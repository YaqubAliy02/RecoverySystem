# Stage 1: Build
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# --- IMPORTANT: Ensure you have a .dockerignore file in your RecoverySystem directory --- 
# --- (the directory where you run docker-compose build) --- 
# --- that includes at least the following lines: --- 
# **/bin
# **/obj
# --- This prevents copying build artifacts from your Windows host into the Linux container --- 

# Copy only the necessary project files for restore
# Copy them into the directory structure they will have after the final COPY .
COPY ["src/Services/MonitoringService/RecoverySystem.MonitoringService/Recovery.MonitoringService.csproj", "src/Services/MonitoringService/RecoverySystem.MonitoringService/"]
COPY ["src/BuildingBlocks/RecoverySystem.BuildingBlocks.Messaging/RecoverySystem.BuildingBlocks.Messaging.csproj", "src/BuildingBlocks/RecoverySystem.BuildingBlocks.Messaging/"]
COPY ["src/BuildingBlocks/RecoverySystem.BuildingBlocks.Events/RecoverySystem.BuildingBlocks.Events.csproj", "src/BuildingBlocks/RecoverySystem.BuildingBlocks.Events/"]
# Add COPY lines for any other dependent .csproj files here

# If you have a NuGet.config at the root (RecoverySystem directory), copy it:
# COPY ["NuGet.config", "."]

# Restore dependencies for the specific service project
# This uses the .csproj file copied above
RUN dotnet restore "src/Services/MonitoringService/RecoverySystem.MonitoringService/Recovery.MonitoringService.csproj"

# Copy the rest of the application code
# The .dockerignore file (mentioned above) is crucial here!
COPY . .

# Build the specific service
# Set the WORKDIR to the final location of the project source code after COPY . .
WORKDIR /src/src/Services/MonitoringService/RecoverySystem.MonitoringService
RUN dotnet build "Recovery.MonitoringService.csproj" -c Release -o /app/build --no-restore

# Stage 2: Publish
FROM build AS publish
# WORKDIR is inherited from the previous stage
RUN dotnet publish "Recovery.MonitoringService.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Stage 3: Runtime
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final
WORKDIR /app
COPY --from=publish /app/publish .
EXPOSE 80
ENTRYPOINT ["dotnet", "Recovery.MonitoringService.dll"]

